/*
 * SlotsView.java
 */

package slots;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class SlotsView extends FrameView {
public static double startingAmount1;
    public static int matched1 =0;
    public static int matched2 =0;
    public static int matched3 =0;
    public static int matched4 =0;
    
    boolean enterAmount = true;
    
    public static int wins =0;
    public static double amountWon=0.0;
    public SlotsView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = SlotsApp.getApplication().getMainFrame();
            aboutBox = new SlotsAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        SlotsApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        btnSpin = new javax.swing.JButton();
        // TODO add your handling code here:
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(slots.SlotsApp.class).getContext().getActionMap(SlotsView.class, this);
        btnSpin.setAction(actionMap.get("btnSpin")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(slots.SlotsApp.class).getContext().getResourceMap(SlotsView.class);
        btnSpin.setText(resourceMap.getString("btnSpin.text")); // NOI18N
        btnSpin.setName("btnSpin"); // NOI18N

        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setIcon(resourceMap.getIcon("jLabel2.icon")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setIcon(resourceMap.getIcon("jLabel3.icon")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setIcon(resourceMap.getIcon("jLabel4.icon")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(451, 451, 451)
                .addComponent(btnSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(97, 97, 97)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSpin, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addGap(78, 78, 78))
        );

        jLabel1.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabel1.AccessibleContext.accessibleName")); // NOI18N

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 1106, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 915, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void btnSpin() 
    {
     
        if(enterAmount==true)
        {
            
              String input ="";
                String input1 ="";
                try
                {
                    
                
                    input1 = JOptionPane.showInputDialog("Enter a starting Integer amount greater than zero");
                 
                    if(Integer.parseInt(input1) > 0)
                    {
                        
                        input = input1;
                        startingAmount1 = Integer.parseInt(input);
                    }
                    if(input!=null && ((Integer.parseInt(input)) > 0))
                    {
                        startingAmount1 = Integer.parseInt(input);
                    
                    
                    }
                    else 
                    {
                        System.exit(0);
                    
                    }
              
                }
                catch(Exception e)
                {
                   JOptionPane optionPane = new JOptionPane("Error",JOptionPane.ERROR_MESSAGE);
                   JDialog dialog = optionPane.createDialog("Enter a Integer number");
                   
                   JOptionPane.showConfirmDialog(null,
                "Integer Number was not entered or was not greater than zero or was too large", "Error", JOptionPane.DEFAULT_OPTION);
                   System.exit(0);
                  
                   
                }
                
                try
                {
                    System.out.println("starting amount: " + Integer.parseInt(input));
                }
                catch(Exception e)
                {
                    System.out.println("Enter a Integer Starting Amount: " + e.getMessage());
                    
                }
               
             amountWon = startingAmount1;   
            
            enterAmount = false;
        }
        
        
        
        
        
        int rand1 = 1 + (int)(Math.random() * 27); 
        int rand2 = 1 + (int)(Math.random() * 27);
        int rand3 = 1 + (int)(Math.random() * 27); 
        int rand4 = 1 + (int)(Math.random() * 27);
       
        int numberMatched =1;
        
        
        
        if(rand1==rand2){ numberMatched++; }
        if(rand1==rand3){ numberMatched++; }
        if(rand1==rand4){ numberMatched++; }
        if(rand2 != rand1 && rand2 == rand3) { numberMatched++; }
        if(rand2 != rand1 && rand2 == rand4) { numberMatched++; }
        if(rand3 != rand1 && rand3 != rand2 && rand3 == rand4) { numberMatched++; } 
        //if(rand1==rand4&& rand2 == rand3){numberMatched++;}
        
        
        if(numberMatched==1)
        {
            
            startingAmount1-=10.0;
            
            
            jLabel5.setText( "$" + String.format("%.2f",startingAmount1)+": Matched none");
            //lblMessage.setText("Matched None");
           // jTextField1.setText("Matched None");
            System.out.println("matched none");
        }
        else if(numberMatched==2)
        {
            
            startingAmount1+=20.0;
            jLabel5.setText("$"+ String.format("%.2f",startingAmount1) + ": Matched 2!");
            System.out.println("matched 2");
        }
         else if(numberMatched==3)
        {
            
            startingAmount1+=40.0;
            jLabel5.setText("$"+String.format("%.2f",startingAmount1)+": Matched 3 or two pairs of two of a kind!");
            System.out.println("matched 3");
        }
         else if(numberMatched==4)
        {
            
            startingAmount1+=100.0;
            jLabel5.setText("$"+String.format("%.2f",startingAmount1)+": Matched 4!");
            
            System.out.println("matched 4");
        }
        
        if(startingAmount1 <=0)
        {
             int input = JOptionPane.showConfirmDialog(null,
                "You are out of money", "out of money", JOptionPane.DEFAULT_OPTION);
             
            System.out.println(input);
            
            System.exit(0);
        }
        
        
            
            for(int i=0;i< Integer.MAX_VALUE-20;i+=10)
            {
                
                
                if(startingAmount1 - amountWon < -60)
                {
                    
                    if (JOptionPane.showConfirmDialog(null, "Your losses are greater than  $ 60  \"want to continue?\"Winnings:$ "+ ((startingAmount1-amountWon)+"" ), "continue?",
                             JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                        {
    // yes option           
                            break;
                        } 
                        else
                        {
                            System.exit(0);
    // no option    
                        }
                    
                }
                
                
                /*
                if(i>20)
                {
                    if(((startingAmount1 - amountWon) == i))
                    {
            
       //         JOptionPane.showConfirmDialog(JOptionPane.YES_NO_OPTION,"your winnings are " +);
            
                        if (JOptionPane.showConfirmDialog(null, "Your winnings are greater than  $ 20  \"want to continue?\"Winnings:$ "+ ((startingAmount1-amountWon)+"" ), "continue?",
                             JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                        {
    // yes option   
                    
                        } 
                        else
                        {
                            System.exit(0);
    // no option    
                        }
                    }
                }
                */
            }
            
            
        
        String inputa ="";
        /*
        if((startingAmount1 - amountWon >=10))
        {
            
           JOptionPane.showConfirmDialog(null,"your winnings are "+ (startingAmount1-amountWon));
            
            
        }
        */
        
            //pic1[i] =getImage(getDocumentBase(),"aa" + (i +1) + ".png");
            
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slots/aa"+rand1+".png")));
            
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slots/aa"+rand2+".png")));
            
            jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slots/aa"+rand3+".png")));
            
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slots/aa"+rand4+".png")));
            
          
     
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
      
       
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        /*
        if((jLabel1.getIcon()==jLabel2.getIcon()) && 
                (jLabel2.getIcon() == jLabel3.getIcon())//4 of a kind
                && (jLabel3.getIcon() ==jLabel4.getIcon()))
        {
            
            startingAmount1+=100.0;
            jLabel6.setText(String.format("%.2f",startingAmount1));
        }
        if((jLabel1.getIcon()==jLabel2.getIcon())) //two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        }
         if((jLabel3.getIcon()==jLabel4.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        }
         
        if((jLabel4.getIcon()==jLabel2.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        }
        if((jLabel4.getIcon()==jLabel1.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        } 
        if((jLabel2.getIcon()==jLabel3.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        } 
        
         if((jLabel3.getIcon()==jLabel1.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        }
         
         if((jLabel1.getIcon()==jLabel4.getIcon()))//two of a kind
                
        {
            
            startingAmount1+=20.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
        }
      
         
         
         
         
        if((jLabel1.getIcon()==jLabel2.getIcon()) && 
               (jLabel2.getIcon() ==jLabel3.getIcon()))//three of a kind 
        {
             startingAmount1+=40.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));        
                    
                    
        }       
        
         if((jLabel4.getIcon()==jLabel3.getIcon()) && (jLabel2.getIcon() ==jLabel3.getIcon()))//three of a kind
        {
             startingAmount1+=40.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));        
                    
                    
        }       
        if((jLabel1.getIcon()==jLabel4.getIcon()) && (jLabel4.getIcon() ==jLabel2.getIcon()))//three of a kind
        {
             startingAmount1+=40.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));        
                    
                    
        }      
        if((jLabel3.getIcon()==jLabel4.getIcon()) && (jLabel4.getIcon() == jLabel1.getIcon()))//three of a kind
        {
             startingAmount1+=40.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));        
                    
                    
        }
         if ((jLabel1.getIcon()!=jLabel2.getIcon())&&(jLabel2.getIcon()
                 != jLabel3.getIcon())&& (jLabel3.getIcon()!= jLabel4.getIcon())) 
         {
             
              startingAmount1-=10.0;
            jLabel5.setText(String.format("%.2f",startingAmount1));
             
         }
         
        */
         
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSpin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
