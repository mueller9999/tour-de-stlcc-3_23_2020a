<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>540</w>
      <h>910</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView
--
~game1: business.Game
~interfaceCounter: int
-jLabel1: javax.swing.JLabel
-jLabel2: javax.swing.JLabel
-jLabel3: javax.swing.JLabel
-jScrollPane1: javax.swing.JScrollPane
-jScrollPane2: javax.swing.JScrollPane
-jbtnClear: javax.swing.JButton
-jbtnSubmitGuess: javax.swing.JButton
-jmnuGuessing: javax.swing.JMenu
-jmnuHiLo: javax.swing.JMenuItem
-jmnuHotCold: javax.swing.JMenuItem
-jtxtGameName: javax.swing.JTextField
-jtxtGuess: javax.swing.JTextField
-jtxtGuessHistory: javax.swing.JTextArea
-jtxtInstructions: javax.swing.JTextArea
-mainPanel: javax.swing.JPanel
-menuBar: javax.swing.JMenuBar
-progressBar: javax.swing.JProgressBar
-statusAnimationLabel: javax.swing.JLabel
-statusMessageLabel: javax.swing.JLabel
-statusPanel: javax.swing.JPanel
-messageTimer: javax.swing.Timer
-busyIconTimer: javax.swing.Timer
-idleIcon: javax.swing.Icon
-busyIcons: javax.swing.Icon[]
-busyIconIndex: int
-aboutBox: javax.swing.JDialog
--
+GuessingGameView(org.jdesktop.application.SingleFrameApplication): ctor
+showAboutBox(): void
-initComponents(): void
-jbtnSubmitGuessActionPerformed(java.awt.event.ActionEvent): void
-jmnuHiLoActionPerformed(java.awt.event.ActionEvent): void
-jmnuHotColdActionPerformed(java.awt.event.ActionEvent): void
-jbtnClearActionPerformed(java.awt.event.ActionEvent): void
-jmnuHiLoItemStateChanged(java.awt.event.ItemEvent): void
~access$000(guessinggame.GuessingGameView): javax.swing.JLabel
~access$102(guessinggame.GuessingGameView, int): int
~access$100(guessinggame.GuessingGameView): int
~access$200(guessinggame.GuessingGameView): javax.swing.Icon[]
~access$300(guessinggame.GuessingGameView): javax.swing.JLabel
~access$400(guessinggame.GuessingGameView): javax.swing.Timer
~access$500(guessinggame.GuessingGameView): javax.swing.JProgressBar
~access$600(guessinggame.GuessingGameView): javax.swing.Icon
~access$700(guessinggame.GuessingGameView): javax.swing.Timer
~access$800(guessinggame.GuessingGameView, java.awt.event.ActionEvent): void
~access$900(guessinggame.GuessingGameView, java.awt.event.ActionEvent): void
~access$1000(guessinggame.GuessingGameView, java.awt.event.ItemEvent): void
~access$1100(guessinggame.GuessingGameView, java.awt.event.ActionEvent): void
~access$1200(guessinggame.GuessingGameView, java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>0</y>
      <w>720</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView
--
~game1: Game
~interfaceCounter = 0: int
-jLabel1: javax.swing.JLabel
-jLabel2: javax.swing.JLabel
-jLabel3: javax.swing.JLabel
-jScrollPane1: javax.swing.JScrollPane
-jScrollPane2: javax.swing.JScrollPane
-jbtnClear: javax.swing.JButton
-jbtnSubmitGuess: javax.swing.JButton
-jmnuGuessing: javax.swing.JMenu
-jmnuHiLo: javax.swing.JMenuItem
-jmnuHotCold: javax.swing.JMenuItem
-jtxtGameName: javax.swing.JTextField
-jtxtGuess: javax.swing.JTextField
-jtxtGuessHistory: javax.swing.JTextArea
-jtxtInstructions: javax.swing.JTextArea
-mainPanel: javax.swing.JPanel
-menuBar: javax.swing.JMenuBar
-progressBar: javax.swing.JProgressBar
-statusAnimationLabel: javax.swing.JLabel
-statusMessageLabel: javax.swing.JLabel
-statusPanel: javax.swing.JPanel
-messageTimer: Timer
-busyIconTimer: Timer
-idleIcon: Icon
-busyIcons = new Icon[15]: Icon[]
-busyIconIndex = 0: int
-aboutBox: JDialog
--
+GuessingGameView(SingleFrameApplication app): ctor
+showAboutBox(): void
-initComponents(): // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;//GEN-BEGIN:initComponents&#13;
void
-jbtnSubmitGuessActionPerformed(java.awt.event.ActionEvent evt): void
-jmnuHiLoActionPerformed(java.awt.event.ActionEvent evt): void
-jmnuHotColdActionPerformed(java.awt.event.ActionEvent evt): void
-jbtnClearActionPerformed(java.awt.event.ActionEvent evt): void
-jmnuHiLoItemStateChanged(//GEN-FIRST:event_jmnuHiLoItemStateChanged&#13;
java.awt.event.ItemEvent evt): //GEN-FIRST:event_jmnuHiLoItemStateChanged&#13;
void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1280</x>
      <y>0</y>
      <w>260</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>business::GuessingBothGames
--
-endmsg: java.lang.String
-errmsg: java.lang.String
-gametype: int
-rnum: int
-lastguess: int
-prevcat: int
-prevdiff: int
-over: boolean
-gcount: int
--
+GuessingBothGames(int): ctor
-setRandom(): void
#getRandom(): int
#getLastGuess(): int
+setMove(java.lang.String): void
+getEndMsg(): java.lang.String
+isGameOver(): boolean
+getErrorMsg(): java.lang.String
+getInstructions(): java.lang.String
+getGameName(): java.lang.String
+getMoveResults(): java.lang.String
-getMoveByHiLo(): java.lang.String
-getMoveByHotCold(): java.lang.String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1550</x>
      <y>0</y>
      <w>240</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>/business::Guessing/
--
-endmsg: java.lang.String
-errmsg: java.lang.String
-rnum: int
-lastguess: int
-gametype: int
-over: boolean
-gcount: int
--
+Guessing(): ctor
-setRandom(): void
+setGuess(java.lang.String): void
+getEndMsg(): java.lang.String
+getErrorMsg(): java.lang.String
+isOver(): boolean
#getRnum(): int
#getLastGuess(): int
+setGameType(int): void
+getGameType(): int
+getGuessResult(): java.lang.String
+getGameName(): java.lang.String
+getInstructions(): java.lang.String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>0</y>
      <w>250</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>/business::Guessing/
--
-endmsg, errmsg: String
-rnum, lastguess: int
-gametype: int
-over: boolean
-gcount: int
--
+Guessing(): ctor
-setRandom(): void
+setGuess(String move): void
+getEndMsg(): String
+getErrorMsg(): String
+isOver(): boolean
#getRnum(): int
#getLastGuess(): int
+setGameType(int gameType1): void
+getGameType(): int
+getGuessResult(): String
+getGameName(): String
+getInstructions(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2060</x>
      <y>0</y>
      <w>280</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>business::GuessingBothGames
--
-endmsg, errmsg: String
-gametype, rnum, lastguess: int
-prevcat, prevdiff: int
-over: boolean
-gcount: int
--
+GuessingBothGames(int gametype): ctor
-setRandom(): void
#getRandom(): int
#getLastGuess(): int
+setMove(String move): void
+getEndMsg(): String
+isGameOver(): boolean
+getErrorMsg(): String
+getInstructions(): String
+getGameName(): String
+getMoveResults(): String
-getMoveByHiLo(): String
-getMoveByHotCold(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>920</y>
      <w>240</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
business::Game
--
--
+getGameName(): java.lang.String
+getInstructions(): java.lang.String
+setGuess(java.lang.String): void
+getGuessResult(): java.lang.String
+getErrorMsg(): java.lang.String
+getEndMsg(): java.lang.String
+isOver(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>920</y>
      <w>240</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>business::GuessHotCold
--
+INSTRUCTIONS: java.lang.String
+GAMENAME: java.lang.String
-prevcat: int
-prevdiff: int
--
+GuessHotCold(): ctor
+getGameName(): java.lang.String
+getInstructions(): java.lang.String
+getGuessResult(): java.lang.String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>920</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
business::Game
--
--
+getGameName(): String
+getInstructions(): String
+setGuess(String guess): void
+getGuessResult(): String
+getErrorMsg(): String
+getEndMsg(): String
+isOver(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>920</y>
      <w>1260</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>business::GuessHotCold
--
+INSTRUCTIONS = "Guess my random number " + "between 1 and 100.  I will give you hints after " + "each guess telling you if you are getting hotter or " + "colder.  Enter zero to stop guessing.": String
+GAMENAME = "Guessing by Hot/Cold": String
-prevcat, prevdiff: int
--
+GuessHotCold(): ctor
+getGameName(): String
+getInstructions(): String
+getGuessResult(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1990</x>
      <y>920</y>
      <w>240</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>business::GuessHiLo
--
+INSTRUCTIONS: java.lang.String
+GAMENAME: java.lang.String
--
+GuessHiLo(): ctor
+getGameName(): java.lang.String
+getInstructions(): java.lang.String
+getGuessResult(): java.lang.String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1120</y>
      <w>1240</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>business::GuessHiLo
--
+INSTRUCTIONS = "Guess my random number " + "between 1 and 100.  I will give you hints after " + "each guess telling you if you were too high or too low. " + "Enter zero to stop guessing.": String
+GAMENAME = "Guessing by high/low": String
--
+GuessHiLo(): ctor
+getGameName(): String
+getInstructions(): String
+getGuessResult(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1250</x>
      <y>1120</y>
      <w>350</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameApp
--
--
+GuessingGameApp(): ctor
#startup(): void
#configureWindow(java.awt.Window): void
+getApplication(): guessinggame.GuessingGameApp
+main(java.lang.String[]): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1610</x>
      <y>1120</y>
      <w>320</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameAboutBox
--
-closeButton: javax.swing.JButton
--
+GuessingGameAboutBox(java.awt.Frame): ctor
+closeAboutBox(): void
-initComponents(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1940</x>
      <y>1120</y>
      <w>360</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameAboutBox
--
-closeButton: javax.swing.JButton
--
+GuessingGameAboutBox(java.awt.Frame parent): ctor
+closeAboutBox(): void
-initComponents(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2310</x>
      <y>1120</y>
      <w>310</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameApp
--
--
#startup(): void
#configureWindow(java.awt.Window root): void
+getApplication(): GuessingGameApp
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$1
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$1(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$2
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$2(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$3
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$3(guessinggame.GuessingGameView): ctor
+propertyChange(java.beans.PropertyChangeEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$4
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$4(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1760</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$5
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$5(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>1290</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$6
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$6(guessinggame.GuessingGameView): ctor
+itemStateChanged(java.awt.event.ItemEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1410</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$7
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$7(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>1410</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>guessinggame::GuessingGameView$8
--
~this$0: guessinggame.GuessingGameView
--
~GuessingGameView$8(guessinggame.GuessingGameView): ctor
+actionPerformed(java.awt.event.ActionEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
